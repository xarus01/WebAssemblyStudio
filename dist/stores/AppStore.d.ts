import { EventDispatcher, ModelRef, Project, File, Directory } from "../model";
import { AppAction } from "../actions/AppActions";
import Group from "../utils/group";
export declare class AppStore {
    private project;
    private output;
    private isContentModified;
    private tabGroups;
    private activeTabGroup;
    onLoadProject: EventDispatcher;
    onDidChangeStatus: EventDispatcher;
    onDidChangeProblems: EventDispatcher;
    onChange: EventDispatcher;
    onDirtyFileUsed: EventDispatcher;
    onDidChangeBuffer: EventDispatcher;
    onDidChangeData: EventDispatcher;
    onDidChangeDirty: EventDispatcher;
    onDidChangeChildren: EventDispatcher;
    onOutputChanged: EventDispatcher;
    onTabsChange: EventDispatcher;
    onSandboxRun: EventDispatcher;
    onDidChangeIsContentModified: EventDispatcher;
    constructor();
    private initStore();
    private loadProject(project);
    private bindProject();
    private setContentModified(modified);
    private addFileTo(file, parent);
    private deleteFile(file);
    private updateFileNameAndDescription(file, name, description);
    getActiveTabGroup(): Group;
    getTabGroups(): Group[];
    getProject(): ModelRef<Project>;
    getIsContentModified(): boolean;
    getOutput(): ModelRef<File>;
    getFileByName(name: string): ModelRef<File>;
    getFileSource(file: ModelRef<File>): string;
    getFileBuffer(file: ModelRef<File>): monaco.editor.IModel;
    getParent(file: ModelRef<File>): ModelRef<Directory>;
    getImmediateChild(directory: ModelRef<Directory>, name: string): ModelRef<File>;
    getPath(directory: ModelRef<Directory>): string;
    getStatus(): string;
    hasStatus(): boolean;
    private logLn(message, kind?);
    private splitGroup();
    private openFile(file, type, preview);
    private openView(view, preview);
    private closeView(view);
    private closeTabs(file);
    private closeGroup(group);
    private openFiles(files);
    private setViewType(view, type);
    private sendSandboxRun(src);
    handleActions(action: AppAction): void;
}
declare const appStore: AppStore;
export default appStore;
